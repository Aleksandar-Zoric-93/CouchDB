/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.amarokGameApplication;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

/**
 *
 * @author Aleks
 */
public class AmarokGamingGui extends javax.swing.JFrame {

    /**
     * Creates new form AmarokGamingGui
     */
    public AmarokGamingGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        createDBname = new javax.swing.JTextField();
        createDatabaseBtn = new javax.swing.JButton();
        listAllDatabasesBtn = new javax.swing.JButton();
        deleteDatabaseBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        docDBname = new javax.swing.JTextField();
        gameField = new javax.swing.JTextField();
        gamerTagField = new javax.swing.JTextField();
        pointsField = new javax.swing.JTextField();
        ingameHrField = new javax.swing.JTextField();
        langField = new javax.swing.JTextField();
        regionField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        addDocBtn = new javax.swing.JButton();
        addDocID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        delDocDatabaseNameField = new javax.swing.JTextField();
        delDocID = new javax.swing.JTextField();
        deleteDocBtn = new javax.swing.JButton();
        docCountBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        viewAllDocBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        dbNameRetrieveDoc = new javax.swing.JTextField();
        docIDretrieveDoc = new javax.swing.JTextField();
        getDocBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        getEnglishSpeakingBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        searchLoyalMemBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        searchTotalInGameBtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Amarok Gaming");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Create Database");

        createDBname.setText("Database Name");

        createDatabaseBtn.setText("Create Database");
        createDatabaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDatabase(evt);
            }
        });

        listAllDatabasesBtn.setText("List All Databases");
        listAllDatabasesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listAllDatabases(evt);
            }
        });

        deleteDatabaseBtn.setBackground(new java.awt.Color(204, 0, 0));
        deleteDatabaseBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteDatabaseBtn.setText("Delete Database");
        deleteDatabaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDatabase(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Add Document");

        docDBname.setText("Database Name");

        gameField.setText("Game");

        gamerTagField.setText("Gamer Tag");

        pointsField.setText("Points");

        ingameHrField.setText("InGame Hours");

        langField.setText("Language");

        regionField.setText("Region");

        emailField.setText("Email");

        addDocBtn.setText("Add Doc");
        addDocBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDocument(evt);
            }
        });

        addDocID.setText("Doc ID");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("* Enter Database name only");

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtn(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("* Re-enter all fields to update");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 594, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createDBname)
                            .addComponent(createDatabaseBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(listAllDatabasesBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteDatabaseBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(116, 116, 116)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(docDBname, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gameField, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ingameHrField, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(regionField, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pointsField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addDocID, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(langField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gamerTagField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addDocBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11)))
                            .addComponent(jLabel3))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(283, 283, 283))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createDBname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(docDBname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gamerTagField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addDocID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createDatabaseBtn)
                    .addComponent(gameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pointsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addDocBtn))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(listAllDatabasesBtn)
                        .addComponent(ingameHrField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(langField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteDatabaseBtn)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jLabel1.getAccessibleContext().setAccessibleName("AmarokGamingTitle");
        jLabel2.getAccessibleContext().setAccessibleName("createDatabaseLabel");
        createDBname.getAccessibleContext().setAccessibleName("createDatabaseTxtField");
        createDatabaseBtn.getAccessibleContext().setAccessibleName("createDatabaseName");

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Delete Document");

        delDocDatabaseNameField.setText("Database Name");

        delDocID.setText("Doc ID");

        deleteDocBtn.setBackground(new java.awt.Color(204, 0, 0));
        deleteDocBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteDocBtn.setText("Delete Document");
        deleteDocBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDocument(evt);
            }
        });

        docCountBtn.setText("Doc Count");
        docCountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countAllDocuments(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("* Enter Database name only");

        viewAllDocBtn.setText("View all documents");
        viewAllDocBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllDocuments(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Retrieve Document");

        dbNameRetrieveDoc.setText("Database Name");

        docIDretrieveDoc.setText("Doc ID");

        getDocBtn.setText("Retrieve Document");
        getDocBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrieveDocument(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Retrieve English speaking gamers");

        getEnglishSpeakingBtn.setText("Retrieve");
        getEnglishSpeakingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrieveAllEnglishSpeakingGamers(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Loval Members");

        searchLoyalMemBtn.setText("Search");
        searchLoyalMemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrieveLoyalMembers(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("(Over 1000 Points and Game Hours)");

        searchTotalInGameBtn.setText("Search");
        searchTotalInGameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalHoursSpentIngame(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Total hours spent in game:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(viewAllDocBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(docCountBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delDocID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(deleteDocBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delDocDatabaseNameField, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jLabel6))
                .addGap(95, 95, 95)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(docIDretrieveDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(dbNameRetrieveDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(getDocBtn)
                    .addComponent(getEnglishSpeakingBtn)
                    .addComponent(jLabel8))
                .addGap(64, 64, 64)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(searchTotalInGameBtn)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(searchLoyalMemBtn))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel9))
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(delDocDatabaseNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dbNameRetrieveDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(delDocID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(docIDretrieveDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteDocBtn)
                            .addComponent(getDocBtn))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(docCountBtn)
                            .addComponent(getEnglishSpeakingBtn)
                            .addComponent(searchTotalInGameBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewAllDocBtn))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchLoyalMemBtn)))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.getAccessibleContext().setAccessibleName("jPanel");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //This method calls the create database method.
    private void createDatabase(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDatabase
        // TODO add your handling code here:
        AmarokGamingMain amarokMain = new AmarokGamingMain();
        String dbName = createDBname.getText();

        amarokMain.createDatabase(dbName);
        JOptionPane.showMessageDialog(null,"Database Created");

    }//GEN-LAST:event_createDatabase

    
    //This method calls the list all databases method.
    private void listAllDatabases(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listAllDatabases
        // TODO add your handling code here:
        AmarokGamingMain amarokMain = new AmarokGamingMain();
        
        String output = "";
        ArrayList<String> array = new ArrayList<String> ();
        for(int i = 0; i<amarokMain.listAllDB().size(); i++){
        array.add(output);       
        }
        output += amarokMain.listAllDB().toString();
        JOptionPane.showMessageDialog(null, output);
       
    }//GEN-LAST:event_listAllDatabases

    
    //This method calls the delete database method.
    private void deleteDatabase(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDatabase
        // TODO add your handling code here:
        AmarokGamingMain amarokMain = new AmarokGamingMain();
        String dbName = createDBname.getText();
        
        amarokMain.deleteDatabase(dbName);
        JOptionPane.showMessageDialog(null,"Database Deleted");
    }//GEN-LAST:event_deleteDatabase

    
    //This method calls the add document method.
    private void addDocument(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDocument
        // TODO add your handling code here:
        AmarokGamingMain amarokMain = new AmarokGamingMain();
        String dbName = docDBname.getText();
        String docID = addDocID.getText();
        String gamerTag = gamerTagField.getText();
        String game = gameField.getText();
        int points = Integer.parseInt(pointsField.getText());
        int inGameHours = Integer.parseInt(ingameHrField.getText());
        String language = langField.getText();
        String region = regionField.getText();
        String email = emailField.getText();
        
        amarokMain.createDocument(dbName,docID, gamerTag, game, points, inGameHours, language, region, email);
        JOptionPane.showMessageDialog(null,"Document Created in " + dbName + "\n\nGamer Tag: " + gamerTag +
                                      "\nGame: " + game + "\nPoints: " + points + "\nInGame Hours: " + inGameHours + "\nLanguage: " + language +
                                       "\nRegion: " + region + "\nEmail: " + email);
    }//GEN-LAST:event_addDocument

    
    //This method calls the delete document method.
    private void deleteDocument(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDocument
        // TODO add your handling code here:
        AmarokGamingMain amarokMain = new AmarokGamingMain();
        String dbName = delDocDatabaseNameField.getText();
        String docID = delDocID.getText();
        
        amarokMain.deleteDocument(dbName, docID);
        JOptionPane.showMessageDialog(null,"Document with ID: " + docID + " has been deleted");
    }//GEN-LAST:event_deleteDocument

    
    //This method calls the count all documents method.
    private void countAllDocuments(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countAllDocuments
        // TODO add your handling code here:
        AmarokGamingMain amarokMain = new AmarokGamingMain();
        String dbName = delDocDatabaseNameField.getText();
        
        int checkForDefaultName=1;
        int checkForEmptyField=1;
        checkForDefaultName = delDocDatabaseNameField.getText().compareTo("Database Name");
        checkForEmptyField = delDocDatabaseNameField.getText().compareTo("");
        if(checkForDefaultName == 0 || checkForEmptyField == 0)
        {
            JOptionPane.showMessageDialog(null,"You need to enter the database name. Try again!");
        }
        
         int count = amarokMain.retrieveDocumentCount(dbName);
         JOptionPane.showMessageDialog(null,"There is currently " + count + " document(s) in the database");      
    }//GEN-LAST:event_countAllDocuments

    
    //This method calls the view all documents method.
    private void viewAllDocuments(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllDocuments
        // TODO add your handling code here:
     
         AmarokGamingMain amarokMain = new AmarokGamingMain();
         String dbName = delDocDatabaseNameField.getText();
 
         
         
         JOptionPane.showMessageDialog(null,amarokMain.getAllDocuments(dbName) + "\n");
    }//GEN-LAST:event_viewAllDocuments

    
    //This method calls the get document method.
    private void retrieveDocument(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retrieveDocument
        // TODO add your handling code here:
        AmarokGamingMain amarokMain = new AmarokGamingMain();
        String dbName = dbNameRetrieveDoc.getText();
        String docID = docIDretrieveDoc.getText();
        
        JOptionPane.showMessageDialog(null,"Here is the document you requested: \n " + 
                                            amarokMain.retrieveDocument(dbName, docID));
    }//GEN-LAST:event_retrieveDocument

    
    
    //This method calls the get all english speaking gamers method.
    private void retrieveAllEnglishSpeakingGamers(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retrieveAllEnglishSpeakingGamers
        // TODO add your handling code here:  
        HttpClient httpclient = new DefaultHttpClient();
 
        HttpGet get = new HttpGet("http://localhost:5984/amarokgamingdb/_design/mapView001/_view/get_english_speaking_gamers");
 
        HttpResponse response = null;
        try {
            response = httpclient.execute(get);
        } catch (IOException ex) {
            Logger.getLogger(AmarokGamingGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        HttpEntity entity=response.getEntity();
        InputStream instream = null;
        try {
            instream = entity.getContent();
        } catch (IOException ex) {
            Logger.getLogger(AmarokGamingGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedOperationException ex) {
            Logger.getLogger(AmarokGamingGui.class.getName()).log(Level.SEVERE, null, ex);
        }
 
        BufferedReader reader = new BufferedReader(new InputStreamReader(instream));
        String strdata = null;
 
        JOptionPane.showMessageDialog(null,"All English speaking gamers are as follow: \n");
        try {
            while( (strdata = reader.readLine())!=null)
            {
                
                
                JOptionPane.showMessageDialog(null,strdata);
                
                
            }
        } catch (IOException ex) {
            Logger.getLogger(AmarokGamingGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        
     
        
    }//GEN-LAST:event_retrieveAllEnglishSpeakingGamers

    
    //This method calls the method to get all loyal members.
    private void retrieveLoyalMembers(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retrieveLoyalMembers
        // TODO add your handling code here:
        
        HttpClient httpclient = new DefaultHttpClient();
 
        HttpGet get = new HttpGet("http://localhost:5984/amarokgamingdb/_design/mapView002/_view/get_gamers_over_price_inGameHours");
 
        HttpResponse response = null;
        try {
            response = httpclient.execute(get);
        } catch (IOException ex) {
            Logger.getLogger(AmarokGamingGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        HttpEntity entity=response.getEntity();
        InputStream instream = null;
        try {
            instream = entity.getContent();
        } catch (IOException ex) {
            Logger.getLogger(AmarokGamingGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedOperationException ex) {
            Logger.getLogger(AmarokGamingGui.class.getName()).log(Level.SEVERE, null, ex);
        }
 
        BufferedReader reader = new BufferedReader(new InputStreamReader(instream));
        String strdata = null;
 
        JOptionPane.showMessageDialog(null,"All loyal members, over 1000 Points and Game Hours, are as follows: \n");
        try {
            while( (strdata = reader.readLine())!=null)
            {
                
                
                JOptionPane.showMessageDialog(null,strdata);
                
                
            }
        } catch (IOException ex) {
            Logger.getLogger(AmarokGamingGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_retrieveLoyalMembers

    
    
    //This method calls the update document method.
    private void updateBtn(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtn
        // TODO add your handling code here:
         AmarokGamingMain amarokMain = new AmarokGamingMain();
        String dbName = docDBname.getText();
        String docID = addDocID.getText();
        String gamerTag = gamerTagField.getText();
        String game = gameField.getText();
        int points = Integer.parseInt(pointsField.getText());
        int inGameHours = Integer.parseInt(ingameHrField.getText());
        String language = langField.getText();
        String region = regionField.getText();
        String email = emailField.getText();
        
        amarokMain.updateDocument(dbName, docID, gamerTag, game, points, inGameHours, language, region, email);
        
        JOptionPane.showMessageDialog(null,"Document Updated in " + dbName + "\n\nGamer Tag: " + gamerTag +
                                      "\nGame: " + game + "\nPoints: " + points + "\nInGame Hours: " + inGameHours + "\nLanguage: " + language +
                                       "\nRegion: " + region + "\nEmail: " + email);
    }//GEN-LAST:event_updateBtn

    
    
    
    //This method return the total hours the gamers have spent in game
    private void totalHoursSpentIngame(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalHoursSpentIngame
        // TODO add your handling code here:
         HttpClient httpclient = new DefaultHttpClient();
 
        HttpGet get = new HttpGet("http://localhost:5984/amarokgamingdb/_design/mapReduceView003/_view/get_amount_hours_inGame");
 
        HttpResponse response = null;
        try {
            response = httpclient.execute(get);
        } catch (IOException ex) {
            Logger.getLogger(AmarokGamingGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        HttpEntity entity=response.getEntity();
        InputStream instream = null;
        try {
            instream = entity.getContent();
        } catch (IOException ex) {
            Logger.getLogger(AmarokGamingGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedOperationException ex) {
            Logger.getLogger(AmarokGamingGui.class.getName()).log(Level.SEVERE, null, ex);
        }
 
        BufferedReader reader = new BufferedReader(new InputStreamReader(instream));
        String strdata = null;
 
        JOptionPane.showMessageDialog(null,"The total hours spent in game are as follows: \n");
        try {
            while( (strdata = reader.readLine())!=null)
            {
                
                
                JOptionPane.showMessageDialog(null,strdata);
                
                
            }
        } catch (IOException ex) {
            Logger.getLogger(AmarokGamingGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_totalHoursSpentIngame

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AmarokGamingGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AmarokGamingGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AmarokGamingGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AmarokGamingGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AmarokGamingGui().setVisible(true);
            }
        });
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDocBtn;
    private javax.swing.JTextField addDocID;
    private javax.swing.JTextField createDBname;
    private javax.swing.JButton createDatabaseBtn;
    private javax.swing.JTextField dbNameRetrieveDoc;
    private javax.swing.JTextField delDocDatabaseNameField;
    private javax.swing.JTextField delDocID;
    private javax.swing.JButton deleteDatabaseBtn;
    private javax.swing.JButton deleteDocBtn;
    private javax.swing.JButton docCountBtn;
    private javax.swing.JTextField docDBname;
    private javax.swing.JTextField docIDretrieveDoc;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField gameField;
    private javax.swing.JTextField gamerTagField;
    private javax.swing.JButton getDocBtn;
    private javax.swing.JButton getEnglishSpeakingBtn;
    private javax.swing.JTextField ingameHrField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField langField;
    private javax.swing.JButton listAllDatabasesBtn;
    private javax.swing.JTextField pointsField;
    private javax.swing.JTextField regionField;
    private javax.swing.JButton searchLoyalMemBtn;
    private javax.swing.JButton searchTotalInGameBtn;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton viewAllDocBtn;
    // End of variables declaration//GEN-END:variables
}
